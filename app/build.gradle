plugins {
    id 'com.android.application'

    id 'com.google.gms.google-services'
}

android {
    signingConfigs {
        release
    }
    namespace 'me.ranmocy.monkeytree'
    compileSdk 34
    defaultConfig {
        applicationId "me.ranmocy.monkeytree"
        minSdkVersion 26
        targetSdk 34
        versionCode 12
        versionName "3.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation group: 'com.ibm.icu', name: 'icu4j', version: '58.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation group: 'com.google.guava', name: 'guava', version: '31.1-android'

    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

def Properties props = new Properties()
def propFile = new File('app/signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('keyStore') &&
            props.containsKey('keyStorePassword') &&
            props.containsKey('keyAlias') &&
            props.containsKey('keyAliasPassword')) {
        android.signingConfigs.release.storeFile = file(props['keyStore'])
        android.signingConfigs.release.storePassword = props['keyStorePassword']
        android.signingConfigs.release.keyAlias = props['keyAlias']
        android.signingConfigs.release.keyPassword = props['keyAliasPassword']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
